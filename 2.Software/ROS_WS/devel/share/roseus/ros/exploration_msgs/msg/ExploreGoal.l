;; Auto-generated. Do not edit!


(when (boundp 'exploration_msgs::ExploreGoal)
  (if (not (find-package "EXPLORATION_MSGS"))
    (make-package "EXPLORATION_MSGS"))
  (shadow 'ExploreGoal (find-package "EXPLORATION_MSGS")))
(unless (find-package "EXPLORATION_MSGS::EXPLOREGOAL")
  (make-package "EXPLORATION_MSGS::EXPLOREGOAL"))

(in-package "ROS")
;;//! \htmlinclude ExploreGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass exploration_msgs::ExploreGoal
  :super ros::object
  :slots (_strategy_plugin _boundary _start_point ))

(defmethod exploration_msgs::ExploreGoal
  (:init
   (&key
    ((:strategy_plugin __strategy_plugin) "")
    ((:boundary __boundary) (instance geometry_msgs::PolygonStamped :init))
    ((:start_point __start_point) (instance geometry_msgs::PointStamped :init))
    )
   (send-super :init)
   (setq _strategy_plugin (string __strategy_plugin))
   (setq _boundary __boundary)
   (setq _start_point __start_point)
   self)
  (:strategy_plugin
   (&optional __strategy_plugin)
   (if __strategy_plugin (setq _strategy_plugin __strategy_plugin)) _strategy_plugin)
  (:boundary
   (&rest __boundary)
   (if (keywordp (car __boundary))
       (send* _boundary __boundary)
     (progn
       (if __boundary (setq _boundary (car __boundary)))
       _boundary)))
  (:start_point
   (&rest __start_point)
   (if (keywordp (car __start_point))
       (send* _start_point __start_point)
     (progn
       (if __start_point (setq _start_point (car __start_point)))
       _start_point)))
  (:serialization-length
   ()
   (+
    ;; string _strategy_plugin
    4 (length _strategy_plugin)
    ;; geometry_msgs/PolygonStamped _boundary
    (send _boundary :serialization-length)
    ;; geometry_msgs/PointStamped _start_point
    (send _start_point :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _strategy_plugin
       (write-long (length _strategy_plugin) s) (princ _strategy_plugin s)
     ;; geometry_msgs/PolygonStamped _boundary
       (send _boundary :serialize s)
     ;; geometry_msgs/PointStamped _start_point
       (send _start_point :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _strategy_plugin
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _strategy_plugin (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; geometry_msgs/PolygonStamped _boundary
     (send _boundary :deserialize buf ptr-) (incf ptr- (send _boundary :serialization-length))
   ;; geometry_msgs/PointStamped _start_point
     (send _start_point :deserialize buf ptr-) (incf ptr- (send _start_point :serialization-length))
   ;;
   self)
  )

(setf (get exploration_msgs::ExploreGoal :md5sum-) "3cc884574b7172d99ae98a7b709ff914")
(setf (get exploration_msgs::ExploreGoal :datatype-) "exploration_msgs/ExploreGoal")
(setf (get exploration_msgs::ExploreGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Name of plugin to use for exploration task
string strategy_plugin

# Boundary for exploration task
geometry_msgs/PolygonStamped boundary

# Starting point for exploration task, inside the boundary
geometry_msgs/PointStamped start_point

# TODO(pbovbel) do we want 'flexible parameters' using json_transport here?


================================================================================
MSG: geometry_msgs/PolygonStamped
# This represents a Polygon with reference coordinate frame and timestamp
Header header
Polygon polygon

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Polygon
#A specification of a polygon where the first and last points are assumed to be connected
Point32[] points

================================================================================
MSG: geometry_msgs/Point32
# This contains the position of a point in free space(with 32 bits of precision).
# It is recommeded to use Point wherever possible instead of Point32.  
# 
# This recommendation is to promote interoperability.  
#
# This message is designed to take up less space when sending
# lots of points at once, as in the case of a PointCloud.  

float32 x
float32 y
float32 z
================================================================================
MSG: geometry_msgs/PointStamped
# This represents a Point with reference coordinate frame and timestamp
Header header
Point point

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :exploration_msgs/ExploreGoal "3cc884574b7172d99ae98a7b709ff914")


