;; Auto-generated. Do not edit!


(when (boundp 'exploration_msgs::ExploreFeedback)
  (if (not (find-package "EXPLORATION_MSGS"))
    (make-package "EXPLORATION_MSGS"))
  (shadow 'ExploreFeedback (find-package "EXPLORATION_MSGS")))
(unless (find-package "EXPLORATION_MSGS::EXPLOREFEEDBACK")
  (make-package "EXPLORATION_MSGS::EXPLOREFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude ExploreFeedback.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass exploration_msgs::ExploreFeedback
  :super ros::object
  :slots (_current_goal _robot_pose ))

(defmethod exploration_msgs::ExploreFeedback
  (:init
   (&key
    ((:current_goal __current_goal) (instance geometry_msgs::PoseStamped :init))
    ((:robot_pose __robot_pose) (instance geometry_msgs::PoseStamped :init))
    )
   (send-super :init)
   (setq _current_goal __current_goal)
   (setq _robot_pose __robot_pose)
   self)
  (:current_goal
   (&rest __current_goal)
   (if (keywordp (car __current_goal))
       (send* _current_goal __current_goal)
     (progn
       (if __current_goal (setq _current_goal (car __current_goal)))
       _current_goal)))
  (:robot_pose
   (&rest __robot_pose)
   (if (keywordp (car __robot_pose))
       (send* _robot_pose __robot_pose)
     (progn
       (if __robot_pose (setq _robot_pose (car __robot_pose)))
       _robot_pose)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/PoseStamped _current_goal
    (send _current_goal :serialization-length)
    ;; geometry_msgs/PoseStamped _robot_pose
    (send _robot_pose :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/PoseStamped _current_goal
       (send _current_goal :serialize s)
     ;; geometry_msgs/PoseStamped _robot_pose
       (send _robot_pose :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/PoseStamped _current_goal
     (send _current_goal :deserialize buf ptr-) (incf ptr- (send _current_goal :serialization-length))
   ;; geometry_msgs/PoseStamped _robot_pose
     (send _robot_pose :deserialize buf ptr-) (incf ptr- (send _robot_pose :serialization-length))
   ;;
   self)
  )

(setf (get exploration_msgs::ExploreFeedback :md5sum-) "04fd07ac30b349303a11fb671faa55e1")
(setf (get exploration_msgs::ExploreFeedback :datatype-) "exploration_msgs/ExploreFeedback")
(setf (get exploration_msgs::ExploreFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

# Current movement goal for exploration
geometry_msgs/PoseStamped current_goal

# Current robot pose
geometry_msgs/PoseStamped robot_pose


================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :exploration_msgs/ExploreFeedback "04fd07ac30b349303a11fb671faa55e1")


