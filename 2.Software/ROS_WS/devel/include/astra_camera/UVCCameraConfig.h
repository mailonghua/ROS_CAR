//#line 2 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the libuvc_camera package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __libuvc_camera__UVCCAMERACONFIG_H__
#define __libuvc_camera__UVCCAMERACONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace libuvc_camera
{
  class UVCCameraConfigStatics;

  class UVCCameraConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(UVCCameraConfig &config, const UVCCameraConfig &max, const UVCCameraConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const UVCCameraConfig &config1, const UVCCameraConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, UVCCameraConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const UVCCameraConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, UVCCameraConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const UVCCameraConfig &config) const = 0;
      virtual void getValue(const UVCCameraConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T UVCCameraConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T UVCCameraConfig::* field;

      virtual void clamp(UVCCameraConfig &config, const UVCCameraConfig &max, const UVCCameraConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const UVCCameraConfig &config1, const UVCCameraConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, UVCCameraConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const UVCCameraConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, UVCCameraConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const UVCCameraConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const UVCCameraConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, UVCCameraConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, UVCCameraConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<UVCCameraConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(UVCCameraConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("vendor"==(*_i)->name){vendor = boost::any_cast<std::string>(val);}
        if("product"==(*_i)->name){product = boost::any_cast<std::string>(val);}
        if("serial"==(*_i)->name){serial = boost::any_cast<std::string>(val);}
        if("index"==(*_i)->name){index = boost::any_cast<int>(val);}
        if("width"==(*_i)->name){width = boost::any_cast<int>(val);}
        if("height"==(*_i)->name){height = boost::any_cast<int>(val);}
        if("video_mode"==(*_i)->name){video_mode = boost::any_cast<std::string>(val);}
        if("frame_rate"==(*_i)->name){frame_rate = boost::any_cast<double>(val);}
        if("timestamp_method"==(*_i)->name){timestamp_method = boost::any_cast<std::string>(val);}
        if("frame_id"==(*_i)->name){frame_id = boost::any_cast<std::string>(val);}
        if("camera_info_url"==(*_i)->name){camera_info_url = boost::any_cast<std::string>(val);}
        if("scanning_mode"==(*_i)->name){scanning_mode = boost::any_cast<int>(val);}
        if("auto_exposure"==(*_i)->name){auto_exposure = boost::any_cast<int>(val);}
        if("auto_exposure_priority"==(*_i)->name){auto_exposure_priority = boost::any_cast<int>(val);}
        if("exposure_absolute"==(*_i)->name){exposure_absolute = boost::any_cast<double>(val);}
        if("iris_absolute"==(*_i)->name){iris_absolute = boost::any_cast<double>(val);}
        if("auto_focus"==(*_i)->name){auto_focus = boost::any_cast<bool>(val);}
        if("focus_absolute"==(*_i)->name){focus_absolute = boost::any_cast<int>(val);}
        if("pan_absolute"==(*_i)->name){pan_absolute = boost::any_cast<int>(val);}
        if("tilt_absolute"==(*_i)->name){tilt_absolute = boost::any_cast<int>(val);}
        if("roll_absolute"==(*_i)->name){roll_absolute = boost::any_cast<int>(val);}
        if("privacy"==(*_i)->name){privacy = boost::any_cast<bool>(val);}
        if("backlight_compensation"==(*_i)->name){backlight_compensation = boost::any_cast<int>(val);}
        if("brightness"==(*_i)->name){brightness = boost::any_cast<int>(val);}
        if("contrast"==(*_i)->name){contrast = boost::any_cast<int>(val);}
        if("gain"==(*_i)->name){gain = boost::any_cast<int>(val);}
        if("power_line_frequency"==(*_i)->name){power_line_frequency = boost::any_cast<int>(val);}
        if("auto_hue"==(*_i)->name){auto_hue = boost::any_cast<bool>(val);}
        if("hue"==(*_i)->name){hue = boost::any_cast<double>(val);}
        if("saturation"==(*_i)->name){saturation = boost::any_cast<int>(val);}
        if("sharpness"==(*_i)->name){sharpness = boost::any_cast<int>(val);}
        if("gamma"==(*_i)->name){gamma = boost::any_cast<double>(val);}
        if("auto_white_balance"==(*_i)->name){auto_white_balance = boost::any_cast<bool>(val);}
        if("white_balance_temperature"==(*_i)->name){white_balance_temperature = boost::any_cast<int>(val);}
        if("white_balance_BU"==(*_i)->name){white_balance_BU = boost::any_cast<double>(val);}
        if("white_balance_RV"==(*_i)->name){white_balance_RV = boost::any_cast<double>(val);}
      }
    }

    std::string vendor;
std::string product;
std::string serial;
int index;
int width;
int height;
std::string video_mode;
double frame_rate;
std::string timestamp_method;
std::string frame_id;
std::string camera_info_url;
int scanning_mode;
int auto_exposure;
int auto_exposure_priority;
double exposure_absolute;
double iris_absolute;
bool auto_focus;
int focus_absolute;
int pan_absolute;
int tilt_absolute;
int roll_absolute;
bool privacy;
int backlight_compensation;
int brightness;
int contrast;
int gain;
int power_line_frequency;
bool auto_hue;
double hue;
int saturation;
int sharpness;
double gamma;
bool auto_white_balance;
int white_balance_temperature;
double white_balance_BU;
double white_balance_RV;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string vendor;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string product;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string serial;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int index;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int width;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int height;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string video_mode;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double frame_rate;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string timestamp_method;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string frame_id;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string camera_info_url;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int scanning_mode;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int auto_exposure;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int auto_exposure_priority;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exposure_absolute;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double iris_absolute;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool auto_focus;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int focus_absolute;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int pan_absolute;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int tilt_absolute;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int roll_absolute;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool privacy;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int backlight_compensation;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int brightness;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int contrast;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int gain;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int power_line_frequency;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool auto_hue;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double hue;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int saturation;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int sharpness;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double gamma;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool auto_white_balance;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int white_balance_temperature;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double white_balance_BU;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double white_balance_RV;
//#line 228 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("UVCCameraConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const UVCCameraConfig &__max__ = __getMax__();
      const UVCCameraConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const UVCCameraConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const UVCCameraConfig &__getDefault__();
    static const UVCCameraConfig &__getMax__();
    static const UVCCameraConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const UVCCameraConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void UVCCameraConfig::ParamDescription<std::string>::clamp(UVCCameraConfig &config, const UVCCameraConfig &max, const UVCCameraConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class UVCCameraConfigStatics
  {
    friend class UVCCameraConfig;

    UVCCameraConfigStatics()
    {
UVCCameraConfig::GroupDescription<UVCCameraConfig::DEFAULT, UVCCameraConfig> Default("Default", "", 0, 0, true, &UVCCameraConfig::groups);
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.vendor = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.vendor = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.vendor = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("vendor", "str", 3, "Vendor ID, hex digits (use camera of any vendor if null).", "", &UVCCameraConfig::vendor)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("vendor", "str", 3, "Vendor ID, hex digits (use camera of any vendor if null).", "", &UVCCameraConfig::vendor)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.product = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.product = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.product = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("product", "str", 3, "Product ID, hex digits (use camera of any model if null).", "", &UVCCameraConfig::product)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("product", "str", 3, "Product ID, hex digits (use camera of any model if null).", "", &UVCCameraConfig::product)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.serial = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.serial = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.serial = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("serial", "str", 3, "Serial number, arbitrary string (use camera of any serial number if null).", "", &UVCCameraConfig::serial)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("serial", "str", 3, "Serial number, arbitrary string (use camera of any serial number if null).", "", &UVCCameraConfig::serial)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.index = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.index = 2147483647;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.index = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("index", "int", 3, "Index into the list of cameras that match the above parameters.", "", &UVCCameraConfig::index)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("index", "int", 3, "Index into the list of cameras that match the above parameters.", "", &UVCCameraConfig::index)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.width = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.width = 2147483647;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.width = 640;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("width", "int", 3, "Image width.", "", &UVCCameraConfig::width)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("width", "int", 3, "Image width.", "", &UVCCameraConfig::width)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.height = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.height = 2147483647;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.height = 480;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("height", "int", 3, "Image height.", "", &UVCCameraConfig::height)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("height", "int", 3, "Image height.", "", &UVCCameraConfig::height)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.video_mode = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.video_mode = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.video_mode = "uncompressed";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("video_mode", "str", 3, "Format of video stream from camera.", "{'enum_description': 'Video stream format', 'enum': [{'srcline': 36, 'description': 'Use any uncompressed format', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'uncompressed', 'ctype': 'std::string', 'type': 'str', 'name': 'uncompressed'}, {'srcline': 37, 'description': 'User any compressed format', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'compressed', 'ctype': 'std::string', 'type': 'str', 'name': 'compressed'}, {'srcline': 38, 'description': 'YUYV', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'yuyv', 'ctype': 'std::string', 'type': 'str', 'name': 'yuyv'}, {'srcline': 39, 'description': 'UYVY', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'uyvy', 'ctype': 'std::string', 'type': 'str', 'name': 'uyvy'}, {'srcline': 40, 'description': 'RGB', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'rgb', 'ctype': 'std::string', 'type': 'str', 'name': 'rgb'}, {'srcline': 41, 'description': 'BGR', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'bgr', 'ctype': 'std::string', 'type': 'str', 'name': 'bgr'}, {'srcline': 42, 'description': 'MJPEG', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'mjpeg', 'ctype': 'std::string', 'type': 'str', 'name': 'mjpeg'}, {'srcline': 43, 'description': 'gray8', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'gray8', 'ctype': 'std::string', 'type': 'str', 'name': 'gray8'}]}", &UVCCameraConfig::video_mode)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("video_mode", "str", 3, "Format of video stream from camera.", "{'enum_description': 'Video stream format', 'enum': [{'srcline': 36, 'description': 'Use any uncompressed format', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'uncompressed', 'ctype': 'std::string', 'type': 'str', 'name': 'uncompressed'}, {'srcline': 37, 'description': 'User any compressed format', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'compressed', 'ctype': 'std::string', 'type': 'str', 'name': 'compressed'}, {'srcline': 38, 'description': 'YUYV', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'yuyv', 'ctype': 'std::string', 'type': 'str', 'name': 'yuyv'}, {'srcline': 39, 'description': 'UYVY', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'uyvy', 'ctype': 'std::string', 'type': 'str', 'name': 'uyvy'}, {'srcline': 40, 'description': 'RGB', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'rgb', 'ctype': 'std::string', 'type': 'str', 'name': 'rgb'}, {'srcline': 41, 'description': 'BGR', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'bgr', 'ctype': 'std::string', 'type': 'str', 'name': 'bgr'}, {'srcline': 42, 'description': 'MJPEG', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'mjpeg', 'ctype': 'std::string', 'type': 'str', 'name': 'mjpeg'}, {'srcline': 43, 'description': 'gray8', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'gray8', 'ctype': 'std::string', 'type': 'str', 'name': 'gray8'}]}", &UVCCameraConfig::video_mode)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.frame_rate = 0.1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.frame_rate = 1000.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.frame_rate = 15.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("frame_rate", "double", 3, "Camera speed, frames per second.", "", &UVCCameraConfig::frame_rate)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("frame_rate", "double", 3, "Camera speed, frames per second.", "", &UVCCameraConfig::frame_rate)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.timestamp_method = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.timestamp_method = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.timestamp_method = "start";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("timestamp_method", "str", 3, "Method for determining the timestamp.", "{'enum_description': 'Methods for determining the timestamp', 'enum': [{'srcline': 53, 'description': 'Time of publication', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'pub', 'ctype': 'std::string', 'type': 'str', 'name': 'PubTime'}, {'srcline': 54, 'description': 'Time when raw frame capture began', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'start', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameStartTime'}, {'srcline': 55, 'description': 'Time when raw frame capture ended', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'stop', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameStopTime'}, {'srcline': 56, 'description': 'Time when camera-to-host transfer completed', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'hostrcpt', 'ctype': 'std::string', 'type': 'str', 'name': 'HostReceiptTime'}]}", &UVCCameraConfig::timestamp_method)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("timestamp_method", "str", 3, "Method for determining the timestamp.", "{'enum_description': 'Methods for determining the timestamp', 'enum': [{'srcline': 53, 'description': 'Time of publication', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'pub', 'ctype': 'std::string', 'type': 'str', 'name': 'PubTime'}, {'srcline': 54, 'description': 'Time when raw frame capture began', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'start', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameStartTime'}, {'srcline': 55, 'description': 'Time when raw frame capture ended', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'stop', 'ctype': 'std::string', 'type': 'str', 'name': 'FrameStopTime'}, {'srcline': 56, 'description': 'Time when camera-to-host transfer completed', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const char * const', 'value': 'hostrcpt', 'ctype': 'std::string', 'type': 'str', 'name': 'HostReceiptTime'}]}", &UVCCameraConfig::timestamp_method)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.frame_id = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.frame_id = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.frame_id = "camera";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("frame_id", "str", 0, "ROS tf frame of reference, resolved with tf_prefix unless absolute.", "", &UVCCameraConfig::frame_id)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("frame_id", "str", 0, "ROS tf frame of reference, resolved with tf_prefix unless absolute.", "", &UVCCameraConfig::frame_id)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.camera_info_url = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.camera_info_url = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.camera_info_url = "";
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("camera_info_url", "str", 0, "Path to camera calibration file.", "", &UVCCameraConfig::camera_info_url)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<std::string>("camera_info_url", "str", 0, "Path to camera calibration file.", "", &UVCCameraConfig::camera_info_url)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.scanning_mode = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.scanning_mode = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.scanning_mode = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("scanning_mode", "int", 0, "Scanning mode.", "{'enum_description': 'Scanning modes', 'enum': [{'srcline': 72, 'description': '', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Interlaced'}, {'srcline': 73, 'description': '', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Progressive'}]}", &UVCCameraConfig::scanning_mode)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("scanning_mode", "int", 0, "Scanning mode.", "{'enum_description': 'Scanning modes', 'enum': [{'srcline': 72, 'description': '', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Interlaced'}, {'srcline': 73, 'description': '', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Progressive'}]}", &UVCCameraConfig::scanning_mode)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.auto_exposure = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.auto_exposure = 3;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.auto_exposure = 3;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("auto_exposure", "int", 0, "Auto exposure mode.", "{'enum_description': 'Auto-exposure modes', 'enum': [{'srcline': 80, 'description': 'Manual exposure, manual iris', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 81, 'description': 'Auto exposure, auto iris', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 82, 'description': 'manual exposure, auto iris', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Shutter_Priority'}, {'srcline': 83, 'description': 'auto exposure, manual iris', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Aperture_Priority'}]}", &UVCCameraConfig::auto_exposure)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("auto_exposure", "int", 0, "Auto exposure mode.", "{'enum_description': 'Auto-exposure modes', 'enum': [{'srcline': 80, 'description': 'Manual exposure, manual iris', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Manual'}, {'srcline': 81, 'description': 'Auto exposure, auto iris', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Auto'}, {'srcline': 82, 'description': 'manual exposure, auto iris', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Shutter_Priority'}, {'srcline': 83, 'description': 'auto exposure, manual iris', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Aperture_Priority'}]}", &UVCCameraConfig::auto_exposure)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.auto_exposure_priority = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.auto_exposure_priority = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.auto_exposure_priority = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("auto_exposure_priority", "int", 0, "In auto mode or shutter priority mode, allow the device to vary frame rate.", "", &UVCCameraConfig::auto_exposure_priority)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("auto_exposure_priority", "int", 0, "In auto mode or shutter priority mode, allow the device to vary frame rate.", "", &UVCCameraConfig::auto_exposure_priority)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exposure_absolute = 0.0001;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exposure_absolute = 10.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exposure_absolute = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("exposure_absolute", "double", 0, "Length of exposure, seconds.", "", &UVCCameraConfig::exposure_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("exposure_absolute", "double", 0, "Length of exposure, seconds.", "", &UVCCameraConfig::exposure_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.iris_absolute = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.iris_absolute = 655.35;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.iris_absolute = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("iris_absolute", "double", 0, "Aperture, f.", "", &UVCCameraConfig::iris_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("iris_absolute", "double", 0, "Aperture, f.", "", &UVCCameraConfig::iris_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.auto_focus = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.auto_focus = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.auto_focus = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<bool>("auto_focus", "bool", 0, "Maintain focus automatically.", "", &UVCCameraConfig::auto_focus)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<bool>("auto_focus", "bool", 0, "Maintain focus automatically.", "", &UVCCameraConfig::auto_focus)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.focus_absolute = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.focus_absolute = 65536;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.focus_absolute = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("focus_absolute", "int", 0, "Absolute focal distance, millimeters.", "", &UVCCameraConfig::focus_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("focus_absolute", "int", 0, "Absolute focal distance, millimeters.", "", &UVCCameraConfig::focus_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.pan_absolute = -648000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.pan_absolute = 648000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.pan_absolute = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("pan_absolute", "int", 0, "Pan (clockwise), arc seconds.", "", &UVCCameraConfig::pan_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("pan_absolute", "int", 0, "Pan (clockwise), arc seconds.", "", &UVCCameraConfig::pan_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.tilt_absolute = -648000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.tilt_absolute = 648000;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.tilt_absolute = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("tilt_absolute", "int", 0, "Tilt (up), arc seconds.", "", &UVCCameraConfig::tilt_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("tilt_absolute", "int", 0, "Tilt (up), arc seconds.", "", &UVCCameraConfig::tilt_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roll_absolute = -180;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roll_absolute = 180;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roll_absolute = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("roll_absolute", "int", 0, "Roll (clockwise), degrees.", "", &UVCCameraConfig::roll_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("roll_absolute", "int", 0, "Roll (clockwise), degrees.", "", &UVCCameraConfig::roll_absolute)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.privacy = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.privacy = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.privacy = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<bool>("privacy", "bool", 0, "Image capture disabled.", "", &UVCCameraConfig::privacy)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<bool>("privacy", "bool", 0, "Image capture disabled.", "", &UVCCameraConfig::privacy)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.backlight_compensation = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.backlight_compensation = 65536;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.backlight_compensation = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("backlight_compensation", "int", 0, "Backlight compensation, device-dependent (zero for none, increasing compensation above zero).", "", &UVCCameraConfig::backlight_compensation)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("backlight_compensation", "int", 0, "Backlight compensation, device-dependent (zero for none, increasing compensation above zero).", "", &UVCCameraConfig::backlight_compensation)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.brightness = -32768;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.brightness = 32767;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.brightness = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("brightness", "int", 0, "Brightness, device dependent.", "", &UVCCameraConfig::brightness)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("brightness", "int", 0, "Brightness, device dependent.", "", &UVCCameraConfig::brightness)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.contrast = -32768;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.contrast = 32767;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.contrast = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("contrast", "int", 0, "Contrast, device dependent.", "", &UVCCameraConfig::contrast)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("contrast", "int", 0, "Contrast, device dependent.", "", &UVCCameraConfig::contrast)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gain = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gain = 65536;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gain = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("gain", "int", 0, "Gain, device dependent.", "", &UVCCameraConfig::gain)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("gain", "int", 0, "Gain, device dependent.", "", &UVCCameraConfig::gain)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.power_line_frequency = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.power_line_frequency = 2;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.power_line_frequency = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("power_line_frequency", "int", 0, "Power line frequency anti-flicker processing.", "{'enum_description': 'Power line frequency modes', 'enum': [{'srcline': 146, 'description': 'Disabled', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Disabled'}, {'srcline': 147, 'description': '50 Hz', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Freq_50'}, {'srcline': 148, 'description': '60 Hz', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Freq_60'}]}", &UVCCameraConfig::power_line_frequency)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("power_line_frequency", "int", 0, "Power line frequency anti-flicker processing.", "{'enum_description': 'Power line frequency modes', 'enum': [{'srcline': 146, 'description': 'Disabled', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Disabled'}, {'srcline': 147, 'description': '50 Hz', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Freq_50'}, {'srcline': 148, 'description': '60 Hz', 'srcfile': '/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Freq_60'}]}", &UVCCameraConfig::power_line_frequency)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.auto_hue = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.auto_hue = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.auto_hue = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<bool>("auto_hue", "bool", 0, "Automatic hue control.", "", &UVCCameraConfig::auto_hue)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<bool>("auto_hue", "bool", 0, "Automatic hue control.", "", &UVCCameraConfig::auto_hue)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.hue = -180.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.hue = 180.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.hue = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("hue", "double", 0, "Hue, degrees.", "", &UVCCameraConfig::hue)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("hue", "double", 0, "Hue, degrees.", "", &UVCCameraConfig::hue)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.saturation = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.saturation = 65536;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.saturation = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("saturation", "int", 0, "Saturation, device dependent (zero for grayscale).", "", &UVCCameraConfig::saturation)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("saturation", "int", 0, "Saturation, device dependent (zero for grayscale).", "", &UVCCameraConfig::saturation)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.sharpness = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.sharpness = 65536;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.sharpness = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("sharpness", "int", 0, "Image sharpness, device dependent.", "", &UVCCameraConfig::sharpness)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("sharpness", "int", 0, "Image sharpness, device dependent.", "", &UVCCameraConfig::sharpness)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.gamma = 0.01;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.gamma = 5.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.gamma = 1.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("gamma", "double", 0, "Gamma.", "", &UVCCameraConfig::gamma)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("gamma", "double", 0, "Gamma.", "", &UVCCameraConfig::gamma)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.auto_white_balance = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.auto_white_balance = 1;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.auto_white_balance = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<bool>("auto_white_balance", "bool", 0, "Automatic white balance.", "", &UVCCameraConfig::auto_white_balance)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<bool>("auto_white_balance", "bool", 0, "Automatic white balance.", "", &UVCCameraConfig::auto_white_balance)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.white_balance_temperature = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.white_balance_temperature = 65536;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.white_balance_temperature = 0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("white_balance_temperature", "int", 0, "White balance temperature, degrees.", "", &UVCCameraConfig::white_balance_temperature)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<int>("white_balance_temperature", "int", 0, "White balance temperature, degrees.", "", &UVCCameraConfig::white_balance_temperature)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.white_balance_BU = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.white_balance_BU = 65536.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.white_balance_BU = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("white_balance_BU", "double", 0, "Blue or U component of white balance, device-dependent.", "", &UVCCameraConfig::white_balance_BU)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("white_balance_BU", "double", 0, "Blue or U component of white balance, device-dependent.", "", &UVCCameraConfig::white_balance_BU)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.white_balance_RV = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.white_balance_RV = 65536.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.white_balance_RV = 0.0;
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("white_balance_RV", "double", 0, "Red or V component of white balance, device-dependent.", "", &UVCCameraConfig::white_balance_RV)));
//#line 291 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(UVCCameraConfig::AbstractParamDescriptionConstPtr(new UVCCameraConfig::ParamDescription<double>("white_balance_RV", "double", 0, "Red or V component of white balance, device-dependent.", "", &UVCCameraConfig::white_balance_RV)));
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/melodic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(UVCCameraConfig::AbstractGroupDescriptionConstPtr(new UVCCameraConfig::GroupDescription<UVCCameraConfig::DEFAULT, UVCCameraConfig>(Default)));
//#line 366 "/opt/ros/melodic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<UVCCameraConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<UVCCameraConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<UVCCameraConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    UVCCameraConfig __max__;
    UVCCameraConfig __min__;
    UVCCameraConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const UVCCameraConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static UVCCameraConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &UVCCameraConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const UVCCameraConfig &UVCCameraConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const UVCCameraConfig &UVCCameraConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const UVCCameraConfig &UVCCameraConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<UVCCameraConfig::AbstractParamDescriptionConstPtr> &UVCCameraConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<UVCCameraConfig::AbstractGroupDescriptionConstPtr> &UVCCameraConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const UVCCameraConfigStatics *UVCCameraConfig::__get_statics__()
  {
    const static UVCCameraConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = UVCCameraConfigStatics::get_instance();

    return statics;
  }

//#line 36 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_uncompressed = "uncompressed";
//#line 37 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_compressed = "compressed";
//#line 38 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_yuyv = "yuyv";
//#line 39 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_uyvy = "uyvy";
//#line 40 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_rgb = "rgb";
//#line 41 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_bgr = "bgr";
//#line 42 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_mjpeg = "mjpeg";
//#line 43 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_gray8 = "gray8";
//#line 53 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_PubTime = "pub";
//#line 54 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_FrameStartTime = "start";
//#line 55 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_FrameStopTime = "stop";
//#line 56 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const char * const UVCCamera_HostReceiptTime = "hostrcpt";
//#line 72 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const int UVCCamera_Interlaced = 0;
//#line 73 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const int UVCCamera_Progressive = 1;
//#line 80 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const int UVCCamera_Manual = 0;
//#line 81 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const int UVCCamera_Auto = 1;
//#line 82 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const int UVCCamera_Shutter_Priority = 2;
//#line 83 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const int UVCCamera_Aperture_Priority = 3;
//#line 146 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const int UVCCamera_Disabled = 0;
//#line 147 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const int UVCCamera_Freq_50 = 1;
//#line 148 "/home/mailonghua/ros_ws/src/ros_astra_camera/cfg/UVCCamera.cfg"
      const int UVCCamera_Freq_60 = 1;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __UVCCAMERARECONFIGURATOR_H__
